<!DOCTYPE html>
<html>
<head>
<title>Map Example</title>
<meta name="viewport" content="initial-scale=1.0">
<meta charset="utf-8">
<style>
  #map {
    height: 100%;
  }
  html, body {
    height: 100%;
    margin: 0;
    padding: 0;
  }
</style>
</head>
<body onload="initMap()">
<div id="map"></div>
<script>
  var map, InfoWindow;
  function initMap() {

    var point = {lat: 42, lng: -93};
    map = new google.maps.Map(document.getElementById('map'), {
        center: point,
        zoom: 7
    });



/*

    https://developers.google.com/maps/documentation/javascript/reference/

	// MAP OPTIONS
	zoomControl: false,
    scaleControl: true,
    mapTypeId: google.maps.MapTypeId.TERRAIN,
    mapTypeControl: true,
    mapTypeControlOptions: {
      style: google.maps.MapTypeControlStyle.DROPDOWN_MENU,
      position: google.maps.ControlPosition.TOP_CENTER,
      mapTypeIds: ['roadmap', 'terrain']
    }

    // INFOWINDOW       
    var InfoWindow = new google.maps.InfoWindow();
    InfoWindow.setContent('hi');
    InfoWindow.setPosition(point);
    InfoWindow.open(map);


	// MAP CLICK
    map.addListener('click', function(e) {
		console.log(e.latLng.lat());
	});


    var image = 'https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png';
    
    // marker 
    var marker = new google.maps.Marker({
      position: point,
      map: map,
      icon: image,
      title: 'Sensor'
    });

    // marker click
    marker.addListener('click', function() {   
      InfoWindow.setContent('hi');
      InfoWindow.open(map, marker);
    });

    // more markers
    InfoWindow = new google.maps.InfoWindow();
    var sensors = [], temp;
    for (var i = 0; i < 100; i++) {
      sensors[i] = {lat:  43.5 + 3*(Math.random()-1), lng:-91 + 5*(Math.random()-1)};
      temp = new google.maps.Marker({
        position: sensors[i],
        map: map,
        title: 'Sensor'+i
      });
      temp.addListener('click', function() {   
        InfoWindow.setContent(this.title);
        InfoWindow.open(map, this);
      });
    }


  // Polyline
    var path = [];
    path[0] = {lat:  41.5, lng:-93};
    for (var i = 1; i < 100; i++) {
      //path[i] = {lat:  path[i-1].lat + 0.1*Math.sin(i*0.03), lng: path[i-1].lng + 0.133*Math.cos(i*0.03)};
      path[i] = {lat:  43.5 + 3*(Math.random()-1), lng:-91 + 5*(Math.random()-1)};
    }
    var path = new google.maps.Polyline({
      path: path,
      strokeColor: '#FF0000',
      strokeOpacity: 1.0,
      strokeWeight: 2
    });
    path.setMap(map);


    // polygon
    var path = [];
    path[0] = {lat:  41.5, lng:-93};
    for (var i = 1; i < 50; i++) {
      path[i] = {lat:  path[i-1].lat + i*0.001, lng: path[i-1].lng + i*0.001};
    }
    for (var i = 50; i < 100; i++) {
      path[i] = {lat:  path[i-1].lat - i*0.001, lng: path[i-1].lng + i*0.001};
    }
    var path = new google.maps.Polygon({
      path: path,
      strokeColor: '#FF0000',
      strokeOpacity: 1.0,
      strokeWeight: 2, 
      fillColor: '#FF0000',
      fillOpacity: 0.35
    });
    path.setMap(map);


	// CIRCLE
    var cityCircle = new google.maps.Circle({
      strokeColor: '#FF0000',
      strokeOpacity: 0.8,
      strokeWeight: 2,
      fillColor: '#FF0000',
      fillOpacity: 0.35,
      map: map,
      //editable: true,
      center: point,
      radius: 30*1000
    });


	// RECTANGLE
    var rectangle = new google.maps.Rectangle({
      strokeColor: '#FF0000',
      strokeOpacity: 0.8,
      strokeWeight: 2,
      fillColor: '#FF0000',
      fillOpacity: 0.35,
      map: map,
      //draggable: true,
      //editable: true,
      bounds: {
        north: 42.685,
        south: 41.671,
        east: -92.234,
        west: -93.251
      }
    });


    // IMAGE OVERLAY
    var imageBounds = {
        north: 43.685,
        south: 40.371,
        east: -90.234,
        west: -97.251
    };
    rainOverlay = new google.maps.GroundOverlay(
        'http://rainproc.its.uiowa.edu/Animation/Cumulative/Accu14.gif', imageBounds);
    rainOverlay.setMap(map);


	// KMZ Layer
    var ctaLayer = new google.maps.KmlLayer({
      url: 'http://ifis.iowafloodcenter.org/ifis/layers/more/iowa_huc8.kmz',
      map: map
    });


    // heat map
    var points = [];
    for (var i = 0; i < 100; i++) {
      points[i] = new google.maps.LatLng(43.5 + 3*(Math.random()-1), -91 + 5*(Math.random()-1));
    }
    var heatmap = new google.maps.visualization.HeatmapLayer({
      data: points,
      radius: 20,
      opacity: 0.9,
      map: map
    });



    // GEORSS DATA
        var georssLayer = new google.maps.KmlLayer({
          url: 'http://api.flickr.com/services/feeds/geo/?g=322338@N20&lang=en-us&format=feed-georss'
        });
        georssLayer.setMap(map);



    // GEOJSON example
    map.data.loadGeoJson(
        'https://storage.googleapis.com/mapsdevsite/json/google.json');
    
    // Set the stroke width, and fill color for each polygon
    map.data.setStyle({
      fillColor: 'green',
      strokeWeight: 1
    });   



  */
}

</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBNCNBr9PSfJ-yTPA63yQVU-Oh7ZJ9MXPk&libraries=visualization" async defer></script>
</body>
</html>